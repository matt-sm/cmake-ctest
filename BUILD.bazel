load("@rules_foreign_cc//foreign_cc:defs.bzl", "cmake")

cmake(
    name = "libhello",
    lib_source = "//lib:srcs",
    out_shared_libs = select({
        "@platforms//os:macos": [
            "libhello.dylib",
        ],
        "@platforms//os:windows": [
            "hello.dll",
        ],
        "//conditions:default": [
            "libhello.so",
        ],
    }),
    out_static_libs = select({
        "@platforms//os:macos": [
            "libhello.a",
        ],
        "@platforms//os:windows": [
            "hello.lib",
        ],
        "//conditions:default": [
            "libhello.a",
        ],
    }),
)

cc_binary(
    name = "hello_bin_static",
    srcs = ["//app:main.cpp"],
    deps = [":libhello"],
)

cc_binary(
    name = "hello_bin_shared",
    srcs = ["//app:main.cpp"],
    linkstatic = False,
    deps = [":libhello"],
)

cc_test(
    name = "test_hello_shared",
    srcs = ["//lib:test_hello.cpp"],
    deps = [":libhello"],
)

cc_test(
    name = "test_hello_static",
    srcs = ["//lib:test_hello.cpp"],
    linkstatic = True,
    deps = [":libhello"],
)

cc_library(
    name = "hello",
    hdrs = ["//lib:hello.h"],
    srcs = ["//lib:hello.cpp", "//lib:hello.h"],
)

cc_library(
    name = "hello2_cc_dep",
    srcs = ["//lib2:hello2.cpp", "//lib2:hello2.h"],
    includes = ["lib"],
    deps = [":hello"],
)

cc_test(
    name = "test_hello2_shared",
    srcs = ["//lib2:test_hello2.cpp"],
    deps = [":hello2_cc_dep"],
)

cc_test(
    name = "test_hello2_static",
    srcs = ["//lib2:test_hello2.cpp"],
    linkstatic = True,
    deps = [":hello2_cc_dep"],
)

cc_library(
    name = "hello2_cmake_dep",
    srcs = ["//lib2:hello2.cpp", "//lib2:hello2.h"],
    deps = [":libhello"],
)